2025-05-09T20:34:21.044871569Z   npx update-browserslist-db@latest
2025-05-09T20:34:21.044877479Z   Why you should do it regularly: https://github.com/browserslist/update-db#readme
2025-05-09T20:34:27.410848165Z âœ“ 3401 modules transformed.
2025-05-09T20:34:27.978864349Z rendering chunks...
2025-05-09T20:34:27.992755902Z computing gzip size...
2025-05-09T20:34:28.02537814Z ../dist/public/index.html                     1.91 kB â”‚ gzip:   0.75 kB
2025-05-09T20:34:28.025446792Z ../dist/public/assets/index-BCPvXEFI.css     99.44 kB â”‚ gzip:  16.39 kB
2025-05-09T20:34:28.025498103Z ../dist/public/assets/index-BVEnBOwi.js   1,356.02 kB â”‚ gzip: 364.09 kB
2025-05-09T20:34:28.025629107Z 
2025-05-09T20:34:28.025635417Z (!) Some chunks are larger than 500 kB after minification. Consider:
2025-05-09T20:34:28.025642507Z - Using dynamic import() to code-split the application
2025-05-09T20:34:28.025646257Z - Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
2025-05-09T20:34:28.025649607Z - Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
2025-05-09T20:34:28.025888323Z âœ“ built in 7.24s
2025-05-09T20:34:28.10887083Z 
2025-05-09T20:34:28.108895861Z   dist/index.js  159.6kb
2025-05-09T20:34:28.108901671Z 
2025-05-09T20:34:28.108907531Z âš¡ Done in 12ms
2025-05-09T20:34:29.416007024Z ==> Uploading build...
2025-05-09T20:34:38.738458188Z ==> Uploaded in 6.1s. Compression took 3.2s
2025-05-09T20:34:38.774870963Z ==> Build successful ðŸŽ‰
2025-05-09T20:34:41.575861588Z ==> Deploying...
2025-05-09T20:35:02.416125675Z ==> Running 'node setup-db.js && node render-patch.js && node dist/index.js'
2025-05-09T20:35:02.711012708Z file:///opt/render/project/src/setup-db.js:2
2025-05-09T20:35:02.711031939Z const { Pool } = require('pg');
2025-05-09T20:35:02.711037099Z                  ^
2025-05-09T20:35:02.711040799Z 
2025-05-09T20:35:02.711045139Z ReferenceError: require is not defined in ES module scope, you can use import instead
2025-05-09T20:35:02.711049609Z This file is being treated as an ES module because it has a '.js' file extension and '/opt/render/project/src/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.
2025-05-09T20:35:02.711055499Z     at file:///opt/render/project/src/setup-db.js:2:18
2025-05-09T20:35:02.711059739Z     at ModuleJob.run (node:internal/modules/esm/module_job:271:25)
2025-05-09T20:35:02.711063459Z     at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:578:26)
2025-05-09T20:35:02.71106709Z     at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:116:5)
2025-05-09T20:35:02.71107687Z 
2025-05-09T20:35:02.71108063Z Node.js v22.14.0
2025-05-09T20:35:03.645750614Z ==> Exited with status 1
2025-05-09T20:35:03.797214704Z ==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys
2025-05-09T20:35:08.155684455Z ==> Running 'node setup-db.js && node render-patch.js && node dist/index.js'
2025-05-09T20:35:08.363981282Z file:///opt/render/project/src/setup-db.js:2
2025-05-09T20:35:08.363999152Z const { Pool } = require('pg');
2025-05-09T20:35:08.364001972Z                  ^
2025-05-09T20:35:08.364003852Z 
2025-05-09T20:35:08.364006302Z ReferenceError: require is not defined in ES module scope, you can use import instead
2025-05-09T20:35:08.364010162Z This file is being treated as an ES module because it has a '.js' file extension and '/opt/render/project/src/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.
2025-05-09T20:35:08.364013912Z     at file:///opt/render/project/src/setup-db.js:2:18
2025-05-09T20:35:08.364016283Z     at ModuleJob.run (node:internal/modules/esm/module_job:271:25)
2025-05-09T20:35:08.364018363Z     at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:578:26)
2025-05-09T20:35:08.364020343Z     at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:116:5)
2025-05-09T20:35:08.364022152Z 
2025-05-09T20:35:08.364024243Z Node.js v22.14.0